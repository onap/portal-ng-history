{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "775f19bd_f3c03443",
        "filename": "app/build.gradle",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-08-07T06:13:21Z",
      "side": 1,
      "message": "Is declaring this here again really necessary? The `compileOnly` declaration above should only make this available in tests",
      "revId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4d382c8_c603c3b9",
        "filename": "app/build.gradle",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 8472
      },
      "writtenOn": "2025-08-07T06:30:59Z",
      "side": 1,
      "message": "Yes it is necassary, because otherwise the test build will issue warnings about unknown annotations.",
      "parentUuid": "775f19bd_f3c03443",
      "revId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fafcd072_227e5b1e",
        "filename": "app/build.gradle",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-08-07T06:16:13Z",
      "side": 1,
      "message": "Is this intentionally commented out? If so, shall it be removed (or will it be modified in one of the other CR\u0027s anyways)?",
      "revId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f24494d_0cbd79d2",
        "filename": "app/build.gradle",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 8472
      },
      "writtenOn": "2025-08-07T06:30:59Z",
      "side": 1,
      "message": "Yes it will be used in https://gerrit.onap.org/r/c/portal-ng/history/+/141646/1",
      "parentUuid": "fafcd072_227e5b1e",
      "revId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b20d630_ef2b6244",
        "filename": "openapi/build.gradle",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-08-07T06:13:21Z",
      "side": 1,
      "message": "Can you check if it is possible to either not specify a version here, or alternatively use some `$springBootVersion` placeholder?",
      "revId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cba4e31_2e9fe5d7",
        "filename": "openapi/build.gradle",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 8472
      },
      "writtenOn": "2025-08-07T06:30:59Z",
      "side": 1,
      "message": "Ideally I want to have all dependency versions in one place. I\u0027m currently looking at using [version catalogs](https://docs.gradle.org/current/userguide/version_catalogs.html), but I would do this in a seperate change.",
      "parentUuid": "9b20d630_ef2b6244",
      "revId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and two other CI systems or another CI system and committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d3 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=3 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=3"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d8bf180987b62476a0777c7d5ca9d4a4c484c5d9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}